/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_CABIN_BRAKES_H
#define _MOCK_CABIN_BRAKES_H

#include "unity.h"
#include "Cabin_Brakes.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_Cabin_Brakes_Init(void);
void mock_Cabin_Brakes_Destroy(void);
void mock_Cabin_Brakes_Verify(void);




#define Brakes_Off_Ignore() Brakes_Off_CMockIgnore()
void Brakes_Off_CMockIgnore(void);
#define Brakes_Off_StopIgnore() Brakes_Off_CMockStopIgnore()
void Brakes_Off_CMockStopIgnore(void);
#define Brakes_Off_Expect() Brakes_Off_CMockExpect(__LINE__)
void Brakes_Off_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Brakes_Off_CALLBACK)(int cmock_num_calls);
void Brakes_Off_AddCallback(CMOCK_Brakes_Off_CALLBACK Callback);
void Brakes_Off_Stub(CMOCK_Brakes_Off_CALLBACK Callback);
#define Brakes_Off_StubWithCallback Brakes_Off_Stub
#define Brakes_On_Ignore() Brakes_On_CMockIgnore()
void Brakes_On_CMockIgnore(void);
#define Brakes_On_StopIgnore() Brakes_On_CMockStopIgnore()
void Brakes_On_CMockStopIgnore(void);
#define Brakes_On_Expect() Brakes_On_CMockExpect(__LINE__)
void Brakes_On_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_Brakes_On_CALLBACK)(int cmock_num_calls);
void Brakes_On_AddCallback(CMOCK_Brakes_On_CALLBACK Callback);
void Brakes_On_Stub(CMOCK_Brakes_On_CALLBACK Callback);
#define Brakes_On_StubWithCallback Brakes_On_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
